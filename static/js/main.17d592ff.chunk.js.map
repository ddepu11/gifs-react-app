{"version":3,"sources":["context.js","useFetch.js","Components/Loading.jsx","Components/Gifs.jsx","Components/Gif.jsx","App.js","index.js"],"names":["AppContext","createContext","AppProvider","children","useState","gifs","setGifs","gif","setGif","loading","setLoading","Provider","value","useGlobalContext","useContext","useFetch","url","fetchGifs","a","fetch","res","json","data","Array","isArray","images","downsized","title","user","avatar_url","display_name","instagram_url","description","website_url","imgSrc","avatar","userName","instagram","profession","website","console","log","useEffect","Loading","className","Gifs","showGifs","length","map","item","index","id","downsized_large","username","trending_datetime","Date","toLocaleDateString","to","src","alt","type","placeholder","Gif","useParams","endPoint","process","toShow","App","path","exact","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.17d592ff.chunk.js","sourcesContent":["import { createContext, useContext, useState } from \"react\";\r\n\r\nconst AppContext = createContext();\r\n\r\nconst AppProvider = ({ children }) => {\r\n  const [gifs, setGifs] = useState([]);\r\n  const [gif, setGif] = useState({});\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  return (\r\n    <AppContext.Provider\r\n      value={{ gifs, setGifs, loading, setLoading, gif, setGif }}\r\n    >\r\n      {children}\r\n    </AppContext.Provider>\r\n  );\r\n};\r\n\r\nconst useGlobalContext = () => {\r\n  return useContext(AppContext);\r\n};\r\n\r\nexport { AppProvider, useGlobalContext };\r\n","import { useEffect } from \"react\";\r\nimport { useGlobalContext } from \"./context\";\r\n\r\nconst useFetch = (url) => {\r\n  const { setGifs, setLoading, setGif } = useGlobalContext();\r\n\r\n  const fetchGifs = async () => {\r\n    setLoading(true);\r\n    try {\r\n      const res = await fetch(url);\r\n      const { data } = await res.json();\r\n      if (Array.isArray(data)) {\r\n        setGifs(data);\r\n      } else {\r\n        const {\r\n          images: {\r\n            downsized: { url },\r\n          },\r\n          title,\r\n          user: {\r\n            avatar_url,\r\n            display_name,\r\n            instagram_url,\r\n            description,\r\n            website_url,\r\n          },\r\n        } = data;\r\n        const newGif = {\r\n          imgSrc: url,\r\n          title,\r\n          avatar: avatar_url,\r\n          userName: display_name,\r\n          instagram: instagram_url,\r\n          profession: description,\r\n          website: website_url,\r\n        };\r\n        setGif(newGif);\r\n      }\r\n      setLoading(false);\r\n    } catch (error) {\r\n      console.log(error);\r\n      setGifs([]);\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  useEffect(\r\n    () => fetchGifs(),\r\n    // eslint-disable-next-line\r\n    []\r\n  );\r\n};\r\nexport { useFetch };\r\n","const Loading = () => {\r\n  return (\r\n    <div className=\"loading\">\r\n      <h1>Loading...</h1>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Loading;\r\n","import { useGlobalContext } from \"../context\";\r\nimport Loading from \"./Loading\";\r\nimport { FcBusinessman } from \"react-icons/fc\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst Gifs = () => {\r\n  const { gifs } = useGlobalContext();\r\n\r\n  let showGifs =\r\n    gifs.length !== 0 ? (\r\n      gifs.map((item, index) => {\r\n        let {\r\n          id,\r\n          images: {\r\n            downsized_large: { url },\r\n          },\r\n          user: { avatar_url },\r\n          username,\r\n          trending_datetime,\r\n        } = item;\r\n\r\n        trending_datetime = new Date(trending_datetime).toLocaleDateString();\r\n\r\n        return (\r\n          <Link to={`/gif/${id}`} key={index} className=\"gif card\">\r\n            <img src={url} alt=\"\" />\r\n            <div className=\"info\">\r\n              {avatar_url !== \"\" ? (\r\n                <img src={avatar_url} alt=\"s\" className=\"avatar\" />\r\n              ) : (\r\n                <FcBusinessman className=\"avatar\" />\r\n              )}\r\n\r\n              <p className=\"us_name\">{username}</p>\r\n\r\n              <span className=\"tr_time\">{trending_datetime}</span>\r\n            </div>\r\n          </Link>\r\n        );\r\n      })\r\n    ) : (\r\n      <Loading />\r\n    );\r\n\r\n  return (\r\n    <>\r\n      <form className=\"search_form\">\r\n        <input type=\"text\" placeholder=\"Search for sticker\" />\r\n        <button type=\"submit\">Search</button>\r\n      </form>\r\n      <main className=\"hero\">{showGifs}</main>;\r\n    </>\r\n  );\r\n};\r\nexport default Gifs;\r\n","import { useParams } from \"react-router-dom\";\r\nimport { useFetch } from \"../useFetch\";\r\nimport Loading from \"./Loading\";\r\nimport { useGlobalContext } from \"../context\";\r\nimport { Link } from \"react-router-dom\";\r\nconst API_KEY = process.env.REACT_APP_API_KEY;\r\n\r\nconst Gif = () => {\r\n  const { gif, loading } = useGlobalContext();\r\n  const { id } = useParams();\r\n  const endPoint = `https://api.giphy.com/v1/gifs/${id}?api_key=${API_KEY}`;\r\n\r\n  useFetch(endPoint);\r\n  let toShow = loading ? (\r\n    \"asad\"\r\n  ) : (\r\n    <div className=\"single_gif\">\r\n      <img src={gif.imgSrc} alt=\"s\" />\r\n      <div className=\"details\">\r\n        <img src={gif.avatar} alt=\"\" />\r\n        <span>{gif.userName}</span>\r\n        <h3>{gif.title}</h3>\r\n        <p>{gif.profession}</p>\r\n      </div>\r\n    </div>\r\n  );\r\n\r\n  return (\r\n    <main className=\"main\">\r\n      {loading ? <Loading /> : toShow}\r\n      {!loading && (\r\n        <Link to=\"/\" className=\"home-btn\">\r\n          Go Back Home\r\n        </Link>\r\n      )}\r\n    </main>\r\n  );\r\n};\r\n\r\nexport default Gif;\r\n","import \"./App.css\";\n// import { useEffect } from \"react\";\nimport { useFetch } from \"./useFetch\";\nimport Gifs from \"./Components/Gifs\";\nimport Gif from \"./Components/Gif\";\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\n\nconst API_KEY = process.env.REACT_APP_API_KEY;\nconst endPoint = `https://api.giphy.com/v1/stickers/trending?api_key=${API_KEY}&limit=10&rating=g`;\n\nfunction App() {\n  \n  useFetch(endPoint);\n  // useEffect(() => useFetch(), []);\n\n  return (\n    <div className=\"container\">\n      <Router>\n        <Switch>\n          <Route path=\"/\" exact>\n            <Gifs />\n          </Route>\n\n          <Route exact path=\"/gif/:id\" children={<Gif />} />\n        </Switch>\n      </Router>\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport { AppProvider } from \"./context\";\n\nReactDOM.render(\n  <AppProvider>\n    <App />\n  </AppProvider>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}