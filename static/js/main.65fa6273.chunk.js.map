{"version":3,"sources":["context.js","Components/Loading.jsx","Components/Gifs.jsx","App.js","useFetch.js","index.js"],"names":["AppContext","createContext","AppProvider","children","useState","gifs","setGifs","Provider","value","useGlobalContext","useContext","Loading","className","Gifs","console","log","showGifs","length","map","item","index","id","url","images","downsized_large","banner_url","user","username","trending_datetime","Date","toLocaleDateString","href","src","alt","endPoint","process","App","fetchGifs","a","fetch","res","json","data","useEffect","useFetch","ReactDOM","render","document","getElementById"],"mappings":"iNAEMA,EAAaC,0BAEbC,EAAc,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SAAe,EACZC,mBAAS,IADG,mBAC7BC,EAD6B,KACvBC,EADuB,KAGpC,OACE,cAACN,EAAWO,SAAZ,CAAqBC,MAAO,CAAEH,OAAMC,WAApC,SACGH,KAKDM,EAAmB,WACvB,OAAOC,qBAAWV,ICPLW,EARC,WACd,OACE,qBAAKC,UAAU,UAAf,SACE,+C,OCwCSC,EAvCF,WAAO,IACVR,EAASI,IAATJ,KAERS,QAAQC,IAAIV,GAEZ,IAAIW,EACc,IAAhBX,EAAKY,OACHZ,EAAKa,KAAI,SAACC,EAAMC,GASVD,EAPFE,GAFuB,IAIFC,EAKnBH,EANFI,OACEC,gBAAmBF,IAEbG,EAGNN,EAHFO,KAAQD,WACRE,EAEER,EAFFQ,SACAC,EACET,EADFS,kBAGF,OADAA,EAAoB,IAAIC,KAAKD,GAAmBE,qBAE9C,oBAAGC,KAAK,KAAiBnB,UAAU,WAAnC,UACE,qBAAKoB,IAAKV,EAAKW,IAAI,KACnB,sBAAKrB,UAAU,OAAf,UACkB,KAAfa,EACC,qBAAKO,IAAKP,EAAYQ,IAAI,IAAIrB,UAAU,WAExC,cAAC,IAAD,CAAeA,UAAU,WAG3B,mBAAGA,UAAU,UAAb,SAAwBe,IACxB,sBAAMf,UAAU,UAAhB,SAA2BgB,SAVbR,MAgBtB,cAAC,EAAD,IAEJ,OAAO,sBAAMR,UAAU,OAAhB,SAAwBI,KCnC3BkB,EAAQ,6DADEC,mCACF,sBAaCC,MAXf,WAIE,OCTe,SAACd,GAAS,IACjBhB,EAAYG,IAAZH,QAEF+B,EAAS,uCAAG,gCAAAC,EAAA,+EAEIC,MAAMjB,GAFV,cAERkB,EAFQ,gBAGSA,EAAIC,OAHb,gBAGNC,EAHM,EAGNA,KACRpC,EAAQoC,GAJM,kDAMd5B,QAAQC,IAAR,MANc,0DAAH,qDAUf4B,qBACE,kBAAMN,MAEN,IDVFO,CAASV,GAIP,qBAAKtB,UAAU,YAAf,SACE,cAAC,EAAD,OETNiC,IAASC,OACP,cAAC,EAAD,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.65fa6273.chunk.js","sourcesContent":["import { createContext, useContext, useState } from \"react\";\r\n\r\nconst AppContext = createContext();\r\n\r\nconst AppProvider = ({ children }) => {\r\n  const [gifs, setGifs] = useState([]);\r\n\r\n  return (\r\n    <AppContext.Provider value={{ gifs, setGifs }}>\r\n      {children}\r\n    </AppContext.Provider>\r\n  );\r\n};\r\n\r\nconst useGlobalContext = () => {\r\n  return useContext(AppContext);\r\n};\r\n\r\nexport { AppProvider, useGlobalContext };\r\n","const Loading = () => {\r\n  return (\r\n    <div className=\"loading\">\r\n      <h1>Loading...</h1>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Loading;\r\n","import { useGlobalContext } from \"../context\";\r\nimport Loading from \"./Loading\";\r\nimport { FcBusinessman } from \"react-icons/fc\";\r\n\r\nconst Gifs = () => {\r\n  const { gifs } = useGlobalContext();\r\n\r\n  console.log(gifs);\r\n\r\n  let showGifs =\r\n    gifs.length !== 0 ? (\r\n      gifs.map((item, index) => {\r\n        let {\r\n          id,\r\n          images: {\r\n            downsized_large: { url },\r\n          },\r\n          user: { banner_url },\r\n          username,\r\n          trending_datetime,\r\n        } = item;\r\n        trending_datetime = new Date(trending_datetime).toLocaleDateString();\r\n        return (\r\n          <a href=\"/a\" key={index} className=\"gif card\">\r\n            <img src={url} alt=\"\" />\r\n            <div className=\"info\">\r\n              {banner_url !== \"\" ? (\r\n                <img src={banner_url} alt=\"s\" className=\"avatar\" />\r\n              ) : (\r\n                <FcBusinessman className=\"avatar\" />\r\n              )}\r\n\r\n              <p className=\"us_name\">{username}</p>\r\n              <span className=\"tr_time\">{trending_datetime}</span>\r\n            </div>\r\n          </a>\r\n        );\r\n      })\r\n    ) : (\r\n      <Loading />\r\n    );\r\n  return <main className=\"hero\">{showGifs}</main>;\r\n};\r\nexport default Gifs;\r\n","import \"./App.css\";\n// import { useEffect } from \"react\";\nimport { useFetch } from \"./useFetch\";\nimport Gifs from \"./Components/Gifs\";\n\nconst API_KEY = process.env.REACT_APP_API_KEY;\nconst endPoint = `https://api.giphy.com/v1/stickers/trending?api_key=${API_KEY}&limit=10&rating=g`;\n\nfunction App() {\n  useFetch(endPoint);\n  // useEffect(() => useFetch(), []);\n\n  return (\n    <div className=\"container\">\n      <Gifs />\n    </div>\n  );\n}\n\nexport default App;\n","import { useEffect } from \"react\";\r\nimport { useGlobalContext } from \"./context\";\r\n\r\nconst useFetch = (url) => {\r\n  const { setGifs } = useGlobalContext();\r\n\r\n  const fetchGifs = async () => {\r\n    try {\r\n      const res = await fetch(url);\r\n      const { data } = await res.json();\r\n      setGifs(data);\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  useEffect(\r\n    () => fetchGifs(),\r\n    // eslint-disable-next-line\r\n    []\r\n  );\r\n};\r\nexport { useFetch };\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport { AppProvider } from \"./context\";\n\nReactDOM.render(\n  <AppProvider>\n    <App />\n  </AppProvider>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}