{"version":3,"sources":["context.js","Components/Loading.jsx","useFetch.js","Components/Search.jsx","Components/Gifs.jsx","Components/Gif.jsx","App.js","index.js"],"names":["AppContext","createContext","AppProvider","children","useState","gifs","setGifs","gif","setGif","loading","setLoading","term","setTerm","Provider","value","useGlobalContext","useContext","Loading","className","useFetch","url","fetchGifs","a","fetch","res","json","data","Array","isArray","images","downsized","title","user","avatar_url","display_name","instagram_url","description","website_url","imgSrc","avatar","userName","instagram","profession","website","console","log","useEffect","Search","keyword","setKeyword","onSubmit","e","preventDefault","type","placeholder","onChange","target","API_KEY","process","endPoint","Gifs","trim","showGifs","map","item","index","id","downsized_large","username","trending_datetime","Date","toLocaleDateString","to","src","alt","Gif","useParams","toShow","App","basename","path","exact","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.ecc442f9.chunk.js","sourcesContent":["import { createContext, useContext, useState } from \"react\";\r\n\r\nconst AppContext = createContext();\r\n\r\nconst AppProvider = ({ children }) => {\r\n  const [gifs, setGifs] = useState([]);\r\n  const [gif, setGif] = useState({});\r\n  const [loading, setLoading] = useState(false);\r\n  const [term, setTerm] = useState(\"\");\r\n\r\n  return (\r\n    <AppContext.Provider\r\n      value={{ gifs, setGifs, loading, setLoading, gif, setGif, term, setTerm }}\r\n    >\r\n      {children}\r\n    </AppContext.Provider>\r\n  );\r\n};\r\n\r\nconst useGlobalContext = () => {\r\n  return useContext(AppContext);\r\n};\r\n\r\nexport { AppProvider, useGlobalContext };\r\n","const Loading = () => {\r\n  return (\r\n    <div className=\"loading\">\r\n      <h1>Loading...</h1>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Loading;\r\n","import { useEffect } from \"react\";\r\nimport { useGlobalContext } from \"./context\";\r\n\r\nconst useFetch = (url) => {\r\n  const { setGifs, setLoading, setGif, term } = useGlobalContext();\r\n\r\n  const fetchGifs = async () => {\r\n    setLoading(true);\r\n\r\n    try {\r\n      const res = await fetch(url);\r\n      const { data } = await res.json();\r\n\r\n      if (Array.isArray(data)) {\r\n        setGifs([...data]);\r\n      } else {\r\n        const {\r\n          images: {\r\n            downsized: { url },\r\n          },\r\n          title,\r\n          user: {\r\n            avatar_url,\r\n            display_name,\r\n            instagram_url,\r\n            description,\r\n            website_url,\r\n          },\r\n        } = data;\r\n        const newGif = {\r\n          imgSrc: url,\r\n          title,\r\n          avatar: avatar_url,\r\n          userName: display_name,\r\n          instagram: instagram_url,\r\n          profession: description,\r\n          website: website_url,\r\n        };\r\n        setGif(newGif);\r\n      }\r\n      setLoading(false);\r\n    } catch (error) {\r\n      console.log(error);\r\n      setGifs([]);\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  useEffect(() => fetchGifs(), [term]);\r\n};\r\nexport { useFetch };\r\n","import React from \"react\";\r\nimport { useState } from \"react\";\r\nimport { useGlobalContext } from \"../context\";\r\n\r\nfunction Search() {\r\n  const { setTerm } = useGlobalContext();\r\n  const [keyword, setKeyword] = useState(\"\");\r\n\r\n  const handleChange = (e) => {\r\n    setKeyword(e.target.value);\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    setTerm(keyword);\r\n  };\r\n\r\n  return (\r\n    <form className=\"search_form\" onSubmit={handleSubmit}>\r\n      <input\r\n        type=\"text\"\r\n        placeholder=\"Search for sticker\"\r\n        value={keyword}\r\n        onChange={handleChange}\r\n      />\r\n\r\n      <button type=\"submit\">Search</button>\r\n    </form>\r\n  );\r\n}\r\nexport default Search;\r\n","import { useGlobalContext } from \"../context\";\r\nimport Loading from \"./Loading\";\r\nimport { FcBusinessman } from \"react-icons/fc\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { useFetch } from \"../useFetch\";\r\nimport Search from \"./Search\";\r\n\r\nconst API_KEY = process.env.REACT_APP_API_KEY;\r\nlet endPoint = `https://api.giphy.com/v1/stickers/trending?api_key=${API_KEY}&limit=10&rating=g`;\r\n\r\nconst Gifs = () => {\r\n  const { gifs, term, loading } = useGlobalContext();\r\n\r\n  if (term !== \"\") {\r\n    endPoint = `https://api.giphy.com/v1/stickers/search?api_key=${API_KEY}&q=${term.trim()}&limit=20&offset=0&rating=g&lang=en`;\r\n  }\r\n\r\n  useFetch(endPoint, [term]);\r\n\r\n  let showGifs =\r\n    loading === false ? (\r\n      gifs.map((item, index) => {\r\n        if (term) {\r\n          var {\r\n            id,\r\n            images: {\r\n              downsized_large: { url },\r\n            },\r\n            username,\r\n            trending_datetime,\r\n          } = item;\r\n        } else {\r\n          var {\r\n            id,\r\n            images: {\r\n              downsized_large: { url },\r\n            },\r\n            user: { avatar_url },\r\n            username,\r\n            trending_datetime,\r\n          } = item;\r\n        }\r\n\r\n        trending_datetime = new Date(trending_datetime).toLocaleDateString();\r\n\r\n        return (\r\n          <Link to={`/gif/${id}`} key={index} className=\"gif card\">\r\n            <img src={url} alt=\"\" />\r\n            <div className=\"info\">\r\n              {avatar_url !== \"\" && avatar_url ? (\r\n                <img src={avatar_url} alt={username} className=\"avatar\" />\r\n              ) : (\r\n                <FcBusinessman className=\"avatar\" />\r\n              )}\r\n\r\n              <p className=\"us_name\">{username}</p>\r\n\r\n              <span className=\"tr_time\">{trending_datetime}</span>\r\n            </div>\r\n          </Link>\r\n        );\r\n      })\r\n    ) : (\r\n      <Loading />\r\n    );\r\n\r\n  return (\r\n    <>\r\n      <Search />\r\n      <main className=\"hero\">{showGifs}</main>;\r\n    </>\r\n  );\r\n};\r\nexport default Gifs;\r\n","import { useParams } from \"react-router-dom\";\r\nimport { useFetch } from \"../useFetch\";\r\nimport Loading from \"./Loading\";\r\nimport { useGlobalContext } from \"../context\";\r\nimport { Link } from \"react-router-dom\";\r\nconst API_KEY = process.env.REACT_APP_API_KEY;\r\n\r\nconst Gif = () => {\r\n  const { gif, loading } = useGlobalContext();\r\n  const { id } = useParams();\r\n  const endPoint = `https://api.giphy.com/v1/gifs/${id}?api_key=${API_KEY}`;\r\n\r\n  useFetch(endPoint);\r\n  let toShow = loading ? (\r\n    \"asad\"\r\n  ) : (\r\n    <div className=\"single_gif card\">\r\n      <img src={gif.imgSrc} alt=\"s\" />\r\n      <div className=\"details\">\r\n        <img src={gif.avatar} alt=\"\" />\r\n        <span>{gif.userName}</span>\r\n        <h3>{gif.title}</h3>\r\n        <p>{gif.profession}</p>\r\n      </div>\r\n    </div>\r\n  );\r\n\r\n  return (\r\n    <main className=\"main\">\r\n      {loading ? <Loading /> : toShow}\r\n      {!loading && (\r\n        <Link to=\"/\" className=\"home-btn\">\r\n          Go Back Home\r\n        </Link>\r\n      )}\r\n    </main>\r\n  );\r\n};\r\n\r\nexport default Gif;\r\n","import \"./App.css\";\nimport Gifs from \"./Components/Gifs\";\nimport Gif from \"./Components/Gif\";\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\n\nfunction App() {\n  return (\n    <div className=\"container\">\n      <Router basename={process.env.PUBLIC_URL}>\n        <Switch>\n          <Route path=\"/\" exact>\n            <Gifs />\n          </Route>\n\n          <Route exact path=\"/gif/:id\" children={<Gif />} />\n        </Switch>\n      </Router>\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport { AppProvider } from \"./context\";\n\nReactDOM.render(\n  <AppProvider>\n    <App />\n  </AppProvider>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}